name: Firebase on merge
"on":
  push:
    branches:
      - main

jobs:
  client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create .env file
        working-directory: ./app
        run: |
          set -x
          touch .env
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "REACT_APP_RECAPTCHA_KEY_V3_PUB=${{ secrets.RECAPTCHA_KEY_V3_PUB }}" >> .env
          echo "REACT_APP_RECAPTCHA_KEY_ENTERPRISE_PUB=${{ secrets.RECAPTCHA_KEY_ENTERPRISE_PUB }}" >> .env
          echo "GENERATE_SOURCEMAP=true" >> .env
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env


      - name: install all packages
        run: npm run all-install

      - name: install packages global
        working-directory: ./
        run: npm ci

      - name: install packages app
        working-directory: ./app
        run: npm ci

      - name: install packages functions
        working-directory: ./functions
        run: npm ci

      - name: install packages ts
        working-directory: ./typescript-types
        run: npm ci

      - run: cd app && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV_PROFOLIO }}"
          channelId: live
          projectId: dev-profolio

  functions:
    runs-on: ubuntu-latest
    env:
      working-directory: ./functions

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: install packages ts
        working-directory: ./typescript-types
        run: npm ci

      - name: install libraries
        run: npm ci
        working-directory: ${{env.working-directory}}

      - name: install firebase
        run: npm i firebase-tools -g

      - name: setup config
        run: |
          firebase functions:config:set host.base=profolio.dev --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}
          firebase functions:config:set email.host=${{ secrets.EMAIL_SENDER_HOST }} --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}
          firebase functions:config:set email.user=${{ secrets.EMAIL_SENDER_USER }} --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}
          firebase functions:config:set email.password=${{ secrets.EMAIL_SENDER_PASSWORD }} --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}
          firebase functions:config:set spreadsheet.doc_id=${{ secrets.SPREADSHEET_DOC_ID }} --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}
          firebase functions:config:set spreadsheet.credentials=${{ secrets.SPREADSHEET_CREDENTIALS }} --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}

      - name: deploy
        run: firebase deploy --only functions --force --token ${{ secrets.FIREBASE_PROFOLIO_DEV_DEPLOY_CI_TOKEN }}
